import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Node<T> {
    T data;
    Node<T> next;

    public Node(T data) {
        this.data = data;
        next = null;
    }
}

class Runner {

     

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    public static Node<Integer> takeInput() throws IOException {
        Node<Integer> head = null, tail = null;

        String[] datas = br.readLine().trim().split("\\s");

        int i = 0;
        while (i < datas.length && !datas[i].equals("-1")) {
            int data = Integer.parseInt(datas[i]);
            Node<Integer> newNode = new Node<Integer>(data);
            if (head == null) {
                head = newNode;
                tail = newNode;
            } else {
                tail.next = newNode;
                tail = newNode;
            }
            i += 1;
        }

        return head;
    }

    public static void print(Node<Integer> head) {
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
        System.out.println();
    }

    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while (t > 0) {

            Node<Integer> head = takeInput();
            int i = Integer.parseInt(br.readLine().trim());
            Solution.printIthNode(head, i);

            t -= 1;
        }
    }
    	public static void printIthNode(LinkedListNode<Integer> head, int i){
		LinkedListNode<Integer>temp=head;
		int count=0;
		while(temp!=null)
		{
			temp=temp.next;
			count++;
		}
	     temp=head;
		if(i<count)
		{
          for(int j=0;j<i;j++)
		  {
            temp=temp.next;
		  }
		  System.out.print(temp.data);
		}
	}
}
